# Globals
set default-terminal "tmux-256color"
set -ga terminal-overrides ",alacritty:RGB"
set -ga terminal-overrides ",*:Tc"
set -ga terminal-overrides ',*:Smulx=\E[4::%p1%dm'

set -g escape-time 0
set -g repeat-time 0

set -s focus-events on

set -g mouse on

setw -g history-limit 100000

set -g extended-keys always
set -g extended-keys-format csi-u

set -g status-keys vi
set -g mode-keys vi


set -g base-index 1
setw -g pane-base-index 1

set -g renumber-windows on
setw -g automatic-rename on

set -g set-titles on

set -g status-interval 10
set -g display-time 1000

set -g monitor-activity on
set -g visual-activity off

set -g allow-passthrough all

set-hook -g "pane-mode-changed" "run '~/.local/bin/tmux-tools copy-numbers'"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Display
set -g message-style bg=colour235,fg=colour15
set -g message-command-style bg=colour235,fg=colour15

set -g popup-border-lines heavy

set -g clock-mode-colour colour10

set -g status "on"
set -g status-position bottom
set -g status-style bg=colour235,fg=colour7

set -g status-left-length 150
set -g status-right-length 40

set -g status-left "\
#[fg=colour0, bg=colour8]#{?client_prefix,#[bg=colour11],}#{?client_prefix,#[fg=colour0],} tmux \
#[fg=colour15, bg=colour235]#{?window_zoomed_flag, üîç,} \
#[fg=colour5, bg=colour235]#S "

set -g status-right "\
#(~/.config/tmux/scripts/tmux-battery.sh)\
#[fg=colour246, bg=colour235]| %Y/%m/%d |\
#[fg=colour3] %H:%M  \
#[fg=colour248, bg=colour239]";

set -g window-status-style bg=colour8,fg=colour0
set -g window-status-activity-style bg=colour0,fg=colour7
set -g window-status-current-style bg=colour4,fg=colour0
set -g window-status-bell-style bg=colour1,fg=colour7

set -g window-status-format "\
#{?window_bell_flag,#[fg=colour88],#[fg=colour238]}\
#{?window_bell_flag,#[bg=colour1],#[bg=colour243]}‚ñé\
#[fg=colour238]\
#{?window_bell_flag,#[bg=colour1],#[bg=colour243]}\
 #I  #W "

set -g window-status-current-format "#[fg=colour12,bg=colour4]‚ñé#[fg=colour0,bg=colour4] #I  #W "

set -g pane-border-status top;
set -g pane-border-lines heavy
set -g pane-border-style bg=terminal,fg=colour237
set -g pane-active-border-style bg=terminal,fg=colour4

set -g pane-border-format "\
#[fg=colour5, bg=terminal][ \
#[fg=colour15, bg=terminal]#P\
#[fg=colour5, bg=terminal] ][ \
#[fg=colour15, bg=terminal]#{pane_current_command}\
#[fg=colour5, bg=terminal] ][ \
#[fg=colour15, bg=terminal]#( ~/.config/tmux/scripts/pwd.sh #{pane_current_path})\
#[fg=colour5, bg=terminal] ]"

# Mappings

## session stuff
unbind C-b
set -g prefix M-Space;

bind C new-session

### edit config
bind e new-window -n "tmux.conf" "$(brew --prefix)/bin/nvim ~/.config/tmux/tmux.conf && tmux source ~/.config/tmux/tmux.conf && tmux display '~/.config/tmux/tmux.conf sourced' || tmux display 'Error sourcing config'"

### reload config
bind r run "tmux source-file ~/.config/tmux/tmux.conf && tmux display '~/.config/tmux/tmux.conf sourced' || tmux display 'Error sourcing config'"

## window stuff
bind c new-window -c '#{pane_current_path}'

## pane stuff
bind - split-window -v -c '#{pane_current_path}'
bind _ split-window -h -c '#{pane_current_path}'

bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

bind -T root 'M-h' if-shell "$is_vim" 'send-keys M-h' "run-shell '~/.local/bin/tmux-tools focus-pane left || exit 0'"
bind -T root 'M-j' if-shell "$is_vim" 'send-keys M-j' "run-shell '~/.local/bin/tmux-tools focus-pane bottom || exit 0'"
bind -T root 'M-k' if-shell "$is_vim" 'send-keys M-k' "run-shell '~/.local/bin/tmux-tools focus-pane top || exit 0'"
bind -T root 'M-l' if-shell "$is_vim" 'send-keys M-l' "run-shell '~/.local/bin/tmux-tools focus-pane right || exit 0'"

bind -T copy-mode-vi 'M-h' select-pane -L
bind -T copy-mode-vi 'M-j' select-pane -D
bind -T copy-mode-vi 'M-k' select-pane -U
bind -T copy-mode-vi 'M-l' select-pane -R

bind -T root 'M-1' select-window -t 1
bind -T root 'M-2' select-window -t 2
bind -T root 'M-3' select-window -t 3
bind -T root 'M-4' select-window -t 4
bind -T root 'M-5' select-window -t 5
bind -T root 'M-6' select-window -t 6
bind -T root 'M-7' select-window -t 7
bind -T root 'M-8' select-window -t 8
bind -T root 'M-9' select-window -t 9
bind -T root 'M-0' select-window -t 0

bind -T root M-H if-shell "$is_vim" 'send-keys M-H' 'run-shell "~/.local/bin/tmux-tools wm left"'
bind -T root M-J if-shell "$is_vim" 'send-keys M-J' 'run-shell "~/.local/bin/tmux-tools wm bottom"'
bind -T root M-K if-shell "$is_vim" 'send-keys M-K' 'run-shell "~/.local/bin/tmux-tools wm top"'
bind -T root M-L if-shell "$is_vim" 'send-keys M-L' 'run-shell "~/.local/bin/tmux-tools wm right"'

bind -T root C-M-h if-shell "$is_vim" 'send-keys C-M-h' 'resize-pane -L 1'
bind -T root C-M-j if-shell "$is_vim" 'send-keys C-M-j' 'resize-pane -D 1'
bind -T root C-M-k if-shell "$is_vim" 'send-keys C-M-k' 'resize-pane -U 1'
bind -T root C-M-l if-shell "$is_vim" 'send-keys C-M-l' 'resize-pane -R 1'

bind -r f resize-pane -Z

## copy-mode
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X begin-selection \; send-keys -X rectangle-on
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy" \; send-keys -X rectangle-off
bind-key -T copy-mode-vi Escape send-keys -X clear-selection \; send-keys -X rectangle-off
bind-key -T copy-mode-vi i send-keys -X cancel \; send-keys -X rectangle-off

bind-key -r [ copy-mode
bind-key -r ? copy-mode \; command-prompt -T search -p "(search up)" { send-keys -X search-backward "%%" }
bind-key -r / copy-mode \; command-prompt -T search -p "(search down)" { send-keys -X search-forward "%%" }

bind-key -T copy-mode-vi C-M-h resize-pane -L 1
bind-key -T copy-mode-vi C-M-j resize-pane -D 1
bind-key -T copy-mode-vi C-M-k resize-pane -U 1
bind-key -T copy-mode-vi C-M-l resize-pane -R 1

## other stuff
unbind i
bind -r i run-shell "tmux neww ~/.config/tmux/scripts/cht.sh"

bind -T root M-n run-shell "~/.local/bin/tmux-tools notes -Y S -X $(tmux display-message -p '#{e|+|:#{window_width},#{e|-|:0,#{popup_width}}}')"

bind-key -r , command-prompt "rename-session '%%'"

bind -r o display-popup -h 15 -w 30 -E '~/.local/bin/tmux-tools sessions load'
bind -r S display-popup -h 3 -w 50 -E '~/.local/bin/tmux-tools sessions save'

### Move pane
bind -r j display-popup -h 10 -w 40 -E '~/.config/tmux/scripts/joiner.sh'

### 4-way split
bind -r N run-shell "~/.config/tmux/scripts/split.sh 4"

## mouse stuff
bind-key -T root WheelUpPane \
    if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
    'send -Mt=' 'if-shell -t= "#{?alternate_on,true,false} || \
        echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
    "send -t= Up Up Up" "copy-mode -t="'

bind-key -T root WheelDownPane \
    if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' 'if-shell -t= "#{?alternate_on,true,false} || \
        echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
    "send -t= Down Down Down" "send -Mt="'

bind -n MouseDrag1Pane \
    if-shell "$is_vim" {
        send-keys -M
    } {
        if -Ft= '#{mouse_any_flag}' \
            'if -Ft= \"#{pane_in_mode}\" \
                \"copy-mode -eM\" \
                \"send-keys -M\"' \
        'copy-mode -eM'
    }
 
# vim: ft=tmux
